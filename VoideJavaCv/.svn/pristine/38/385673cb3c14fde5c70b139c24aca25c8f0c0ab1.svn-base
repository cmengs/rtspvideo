package cn.com.zj.VoideJavaCv;

import javax.swing.JFrame;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.avcodec;
import org.bytedeco.javacpp.opencv_imgcodecs;
import org.bytedeco.javacpp.opencv_objdetect;
import org.bytedeco.javacpp.opencv_core.IplImage;
import org.bytedeco.javacv.CanvasFrame;
import org.bytedeco.javacv.FFmpegFrameGrabber;
import org.bytedeco.javacv.Frame;
import org.bytedeco.javacv.FrameGrabber;
import org.bytedeco.javacv.FrameRecorder;
import org.bytedeco.javacv.OpenCVFrameConverter;
import org.bytedeco.javacv.FrameGrabber.Exception;

/**
 * 实时视频现场
 * 对摄像头画面进行实时推流操作
 * @author Administrator
 *
 */
public class Voide extends Thread{
	String inputFile;
	String outputFile;
	int v_rs;
	/**
	 * 实时视频现场
	 * 对摄像头画面进行实时推流操作
	 * @author Administrator
	 *
	 */
	public Voide(String inputFile,String outputFile,int v_rs) {
		this.inputFile = inputFile;
		this.outputFile = outputFile;
		this.v_rs = v_rs;
	}
	@Override
	public void run() {
		System.out.println("进入线程");
		// TODO Auto-generated method stub

		Loader.load(opencv_objdetect.class);
		long startTime=0;
		FrameGrabber grabber=null;
		try {
			grabber = FFmpegFrameGrabber.createDefault(inputFile);
		} catch (Exception e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		try {
			grabber.start();
		} catch (Exception e) {
			try {
				grabber.restart();
			} catch (Exception e1) {
				try {
					throw e;
				} catch (Exception e2) {
					// TODO Auto-generated catch block
					e2.printStackTrace();
				}
			}
		}
		
		OpenCVFrameConverter.ToIplImage converter = new OpenCVFrameConverter.ToIplImage();
		Frame grabframe=null;
		try {
			grabframe = grabber.grab();
		} catch (Exception e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}
		IplImage grabbedImage =null;
		if(grabframe!=null){
			System.out.println("取到第一帧");
			grabbedImage = converter.convert(grabframe);
		}else{
			System.out.println("没有取到第一帧");
		}
		//如果想要保存图片,可以使用 opencv_imgcodecs.cvSaveImage("hello.jpg", grabbedImage);来保存图片
//		opencv_imgcodecs.cvSaveImage("hello.jpg", grabbedImage);
		FrameRecorder recorder=null;
		try {
			recorder = FrameRecorder.createDefault(outputFile, 800, 556);
		} catch (org.bytedeco.javacv.FrameRecorder.Exception e) {
			try {
				throw e;
			} catch (org.bytedeco.javacv.FrameRecorder.Exception e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		}
		recorder.setVideoCodec(avcodec.AV_CODEC_ID_H264); // avcodec.AV_CODEC_ID_H264
		recorder.setFormat("flv");
		recorder.setFrameRate(v_rs);
		recorder.setGopSize(2);
		System.out.println("["+inputFile+"]准备开始推流...");
		try {
			System.out.println("进入try");
			recorder.start();
		} catch (org.bytedeco.javacv.FrameRecorder.Exception e) {
			try {
				System.out.println("录制器启动失败，正在重新启动...");
				if(recorder!=null)
				{
					System.out.println("尝试关闭录制器");
					recorder.stop();
					System.out.println("尝试重新开启录制器");
					recorder.start();
				}
				
			} catch (org.bytedeco.javacv.FrameRecorder.Exception e1) {
				try {
					throw e;
				} catch (org.bytedeco.javacv.FrameRecorder.Exception e2) {
					// TODO Auto-generated catch block
					e2.printStackTrace();
				}
			}
		}
		System.out.println("开始推流");
		try {
			while ((grabframe=grabber.grab()) != null) {
//				System.out.println("推流...");
				grabbedImage = converter.convert(grabframe);
				Frame rotatedFrame = converter.convert(grabbedImage);
				
				if (startTime == 0) {
					startTime = System.currentTimeMillis();
				}
				recorder.setTimestamp(1000 * (System.currentTimeMillis() - startTime));//时间戳
				if(rotatedFrame!=null){
				recorder.record(rotatedFrame);
				}
				
				Thread.sleep(40);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (org.bytedeco.javacv.FrameRecorder.Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			recorder.stop();
			recorder.release();
		} catch (org.bytedeco.javacv.FrameRecorder.Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			grabber.stop();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.exit(2);
		super.run();
	}
}
